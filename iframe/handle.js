// Generated by CoffeeScript 1.3.3

$(function() {
  var i, mini, n, place, put_size, rate, read_size, s, snap, _i, _j;
  n = 6;
  s = 0;
  mini = false;
  snap = {};
  $.fx.speeds._default = 400;
  read_size = function() {
    var json, screen_h, screen_w;
    screen_w = $(window).width();
    screen_h = $(window).height();
    return json = {
      uw: screen_w,
      uh: screen_h,
      ew: screen_w * 0.9,
      eh: screen_h * 0.9,
      sw: screen_w * 0.01,
      sh: screen_h * 0.01
    };
  };
  $('#box').append('<table/>');
  for (i = _i = 1; 1 <= n ? _i <= n : _i >= n; i = 1 <= n ? ++_i : --_i) {
    $('table').append('<tr/>');
  }
  for (i = _j = 1; 1 <= n ? _j <= n : _j >= n; i = 1 <= n ? ++_j : --_j) {
    $('tr').append('<td/>');
  }
  $('td').append('<iframe/>');
  place = {
    x: 0,
    y: 0
  };
  rate = void 0;
  put_size = function() {
    var json;
    s = read_size();
    json = {
      'margin-left': s.sw * 4,
      'margin-right': s.sw * 4,
      'margin-top': s.sh * 4,
      'margin-bottom': s.sh * 4
    };
    $('#box').animate(json, 400);
    json = {
      width: s.ew,
      height: s.eh,
      'margin-left': s.sw,
      'margin-right': s.sw,
      'margin-top': s.sh,
      'margin-bottom': s.sh - 4
    };
    $('iframe').css(json, 400);
    json = {
      'margin-left': place.x * (s.ew - 1 + 2 * s.sw) * (-1),
      'margin-top': place.y * (s.eh - 1 + 2 * s.sh) * (-1)
    };
    $('body').animate(json, 400);
    return rate = s.uw / (2 * s.sw + n * (2 * s.sw + s.ew));
  };
  $(window).resize(put_size);
  put_size();
  return $(document).keydown(function(e) {
    console.log(e.keyCode);
    if (e.ctrlKey && (!mini)) {
      switch (e.keyCode) {
        case 37:
          if (place.x > 0) {
            place.x -= 1;
          }
          break;
        case 38:
          if (place.y > 0) {
            place.y -= 1;
          }
          break;
        case 39:
          if (place.x < n - 1) {
            place.x += 1;
          }
          break;
        case 40:
          if (place.y < n - 1) {
            place.y += 1;
          }
          break;
        default:
          console.log(e.keyCode);
          return true;
      }
      put_size();
      return false;
    }
  });
});
